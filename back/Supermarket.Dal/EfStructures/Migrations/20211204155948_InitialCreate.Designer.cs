// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Supermarket.Dal.EfStructures;

namespace Supermarket.Dal.EfStructures.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211204155948_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Supermarket.Models.Entities.AddressLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apartment")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("apartment");

                    b.Property<int?>("BuildingNumber")
                        .HasColumnType("int")
                        .HasColumnName("building_number");

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("city");

                    b.Property<string>("District")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("district");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("int")
                        .HasColumnName("postal_code");

                    b.Property<string>("Street")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("street");

                    b.HasKey("Id");

                    b.ToTable("address_location");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FrezerVolume")
                        .HasColumnType("int")
                        .HasColumnName("frezer_volume");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<int?>("StorageVolume")
                        .HasColumnType("int")
                        .HasColumnName("storage_volume");

                    b.Property<string>("Type")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("branch");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Cashbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<decimal?>("Money")
                        .HasColumnType("money")
                        .HasColumnName("money");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("cashbox");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.CashboxTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CashboxId")
                        .HasColumnType("int")
                        .HasColumnName("cashbox_id");

                    b.Property<int?>("Cashier")
                        .HasColumnType("int")
                        .HasColumnName("cashier");

                    b.Property<byte[]>("Date")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("date");

                    b.HasKey("Id");

                    b.HasIndex("CashboxId");

                    b.HasIndex("Cashier");

                    b.ToTable("cashbox_transaction");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("category");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.CellProduct", b =>
                {
                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("DepQuantity")
                        .HasColumnType("int")
                        .HasColumnName("dep_quantity");

                    b.Property<int?>("MaxQuantity")
                        .HasColumnType("int")
                        .HasColumnName("max_quantity");

                    b.Property<int?>("OptimalQuantity")
                        .HasColumnType("int")
                        .HasColumnName("optimal_quantity");

                    b.HasKey("BranchId", "ProductId")
                        .HasName("PK__cell_pro__A12E100189F40DA8");

                    b.HasIndex("ProductId");

                    b.ToTable("cell_products");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.CheckAndDisposeJob", b =>
                {
                    b.Property<int>("JobsId")
                        .HasColumnType("int")
                        .HasColumnName("jobs_id");

                    b.HasKey("JobsId")
                        .HasName("PK__checkAnd__2696017DBF4B6AA8");

                    b.ToTable("checkAndDispose_job");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Customer", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("address_id");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("phone_number")
                        .IsFixedLength(true);

                    b.HasKey("UserId")
                        .HasName("PK__customer__B9BE370FDA7C730B");

                    b.HasIndex("AddressId");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.DeliveryStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("delivery_status");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Deliveryman", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<string>("CarModel")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("car_model");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("car_number");

                    b.Property<string>("CarType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("car_type");

                    b.HasKey("EmployeeId")
                        .HasName("PK__delivery__C52E0BA83EB0395A");

                    b.ToTable("deliveryman");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.DisposePackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("Volume")
                        .HasColumnType("int")
                        .HasColumnName("volume");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("ProductId");

                    b.ToTable("dispose_package");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("address_id");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<DateTime?>("FirstdayDate")
                        .HasColumnType("date")
                        .HasColumnName("firstday_date");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("phone_number")
                        .IsFixedLength(true);

                    b.Property<int?>("ProfessionId")
                        .HasColumnType("int")
                        .HasColumnName("profession_id");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("salary");

                    b.Property<decimal?>("StartingSalary")
                        .HasColumnType("money")
                        .HasColumnName("starting_salary");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("users_id");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BranchId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ProfessionId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[users_id] IS NOT NULL");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("description");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<int?>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("jobs");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.LogSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("LogIn")
                        .HasColumnType("datetime")
                        .HasColumnName("log_in");

                    b.Property<DateTime?>("LogOut")
                        .HasColumnType("datetime")
                        .HasColumnName("log_out");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("log_sessions");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Logistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArrivedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("arrived_at");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("DestinationBranchId")
                        .HasColumnType("int")
                        .HasColumnName("destination_branch_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("datetime")
                        .HasColumnName("sent_at");

                    b.Property<int?>("StartingBranchId")
                        .HasColumnType("int")
                        .HasColumnName("starting_branch_id");

                    b.HasKey("Id");

                    b.HasIndex("DestinationBranchId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StartingBranchId");

                    b.ToTable("logistics");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.OpenPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descrription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("descrription");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("position_id");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("open_positions");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("Delivered")
                        .HasColumnType("datetime")
                        .HasColumnName("delivered");

                    b.Property<int?>("DeliveryManId")
                        .HasColumnType("int")
                        .HasColumnName("delivery_man_id");

                    b.Property<int?>("DeliveryStatusId")
                        .HasColumnType("int")
                        .HasColumnName("delivery_status_id");

                    b.Property<string>("OrderDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("order_description");

                    b.Property<int?>("OrderStatusId")
                        .HasColumnType("int")
                        .HasColumnName("order_status_id");

                    b.Property<bool?>("PeymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("peyment_status")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryManId");

                    b.HasIndex("DeliveryStatusId");

                    b.HasIndex("OrderStatusId");

                    b.ToTable("order");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("OrderId", "ProductId")
                        .HasName("PK__order_pr__022945F643A30D72");

                    b.HasIndex("ProductId");

                    b.ToTable("order_product");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("order_status");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("money")
                        .HasColumnName("cost");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.Property<bool?>("Refunded")
                        .HasColumnType("bit")
                        .HasColumnName("refunded");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.Property<int?>("Volume")
                        .HasColumnType("int")
                        .HasColumnName("volume");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("product");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.ProductPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<int?>("DepQuantity")
                        .HasColumnType("int")
                        .HasColumnName("dep_quantity");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("date")
                        .HasColumnName("expiration_date");

                    b.Property<int?>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("prod_id");

                    b.Property<int?>("Volume")
                        .HasColumnType("int")
                        .HasColumnName("volume");

                    b.Property<int?>("WarehouseQuantity")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_quantity");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("ProdId");

                    b.ToTable("product_package");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Proffesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProfName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prof_name");

                    b.HasKey("Id");

                    b.ToTable("proffesion");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Shipping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArrivedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("arrived_at");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("DestinationBranchId")
                        .HasColumnType("int")
                        .HasColumnName("destination_branch_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("datetime")
                        .HasColumnName("sent_at");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.HasKey("Id");

                    b.HasIndex("DestinationBranchId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("shipping");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.SpecialCare", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("expiration_date");

                    b.Property<int?>("MaxTemp")
                        .HasColumnType("int")
                        .HasColumnName("max_temp");

                    b.Property<int?>("MinTemp")
                        .HasColumnType("int")
                        .HasColumnName("min_temp");

                    b.HasKey("ProductId")
                        .HasName("PK__special___47027DF575F7D6EE");

                    b.ToTable("special_care");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("contact_email");

                    b.Property<int?>("ContactNum")
                        .HasColumnType("int")
                        .HasColumnName("contact_num");

                    b.Property<DateTime?>("ContractExpDate")
                        .HasColumnType("date")
                        .HasColumnName("contract_exp_date");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("supplier");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.TransactionProduct", b =>
                {
                    b.Property<int>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("transaction_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("TransactionId", "ProductId")
                        .HasName("PK__transact__C1B62770E1A34510");

                    b.HasIndex("ProductId");

                    b.ToTable("transaction_product");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("email");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("username")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.WarehouseJob", b =>
                {
                    b.Property<int>("JobsId")
                        .HasColumnType("int")
                        .HasColumnName("jobs_id");

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<int?>("LogisticsId")
                        .HasColumnType("int")
                        .HasColumnName("logistics_id");

                    b.Property<int?>("ShippingId")
                        .HasColumnType("int")
                        .HasColumnName("shipping_id");

                    b.HasKey("JobsId")
                        .HasName("PK__warehous__2696017D04CBC392");

                    b.HasIndex("BranchId");

                    b.HasIndex("LogisticsId");

                    b.HasIndex("ShippingId");

                    b.ToTable("warehouse_jobs");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.WarehouseToDepartmentJob", b =>
                {
                    b.Property<int>("JobsId")
                        .HasColumnType("int")
                        .HasColumnName("jobs_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("JobsId")
                        .HasName("PK__warehous__2696017DDED06737");

                    b.HasIndex("ProductId");

                    b.ToTable("warehouseToDepartment_jobs");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.WishList", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.HasKey("ProductId", "CustomerId")
                        .HasName("PK__wish_lis__0BD4214D53CE60A9");

                    b.HasIndex("CustomerId");

                    b.ToTable("wish_list");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Branch", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.AddressLocation", "Location")
                        .WithMany("Branches")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK__branch__location__70DDC3D8");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Cashbox", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Branch", "Branch")
                        .WithMany("Cashboxes")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__cashbox__branch___71D1E811");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.CashboxTransaction", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Cashbox", "Cashbox")
                        .WithMany("CashboxTransactions")
                        .HasForeignKey("CashboxId")
                        .HasConstraintName("FK__cashbox_t__cashb__73BA3083");

                    b.HasOne("Supermarket.Models.Entities.Employee", "CashierNavigation")
                        .WithMany("CashboxTransactions")
                        .HasForeignKey("Cashier")
                        .HasConstraintName("FK__cashbox_t__cashi__72C60C4A");

                    b.Navigation("Cashbox");

                    b.Navigation("CashierNavigation");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Category", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Department", "Department")
                        .WithMany("Categories")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__category__depart__74AE54BC");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.CellProduct", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Branch", "Branch")
                        .WithMany("CellProducts")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__cell_prod__branc__75A278F5")
                        .IsRequired();

                    b.HasOne("Supermarket.Models.Entities.Product", "Product")
                        .WithMany("CellProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__cell_prod__produ__76969D2E")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.CheckAndDisposeJob", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Job", "Jobs")
                        .WithOne("CheckAndDisposeJob")
                        .HasForeignKey("Supermarket.Models.Entities.CheckAndDisposeJob", "JobsId")
                        .HasConstraintName("FK__checkAndD__jobs___778AC167")
                        .IsRequired();

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Customer", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.AddressLocation", "Address")
                        .WithMany("Customers")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK__customer__addres__797309D9");

                    b.HasOne("Supermarket.Models.Entities.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Supermarket.Models.Entities.Customer", "UserId")
                        .HasConstraintName("FK__customer__user_i__787EE5A0")
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Deliveryman", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.User", "Employee")
                        .WithOne("Deliveryman")
                        .HasForeignKey("Supermarket.Models.Entities.Deliveryman", "EmployeeId")
                        .HasConstraintName("FK__deliverym__emplo__7A672E12")
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.DisposePackage", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Branch", "Branch")
                        .WithMany("DisposePackages")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__dispose_p__branc__7C4F7684");

                    b.HasOne("Supermarket.Models.Entities.Product", "Product")
                        .WithMany("DisposePackages")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__dispose_p__produ__7B5B524B");

                    b.Navigation("Branch");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Employee", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.AddressLocation", "Address")
                        .WithMany("Employees")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK__employee__addres__7E37BEF6");

                    b.HasOne("Supermarket.Models.Entities.Branch", "Branch")
                        .WithMany("Employees")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__employee__branch__01142BA1");

                    b.HasOne("Supermarket.Models.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__employee__depart__00200768");

                    b.HasOne("Supermarket.Models.Entities.Proffesion", "Profession")
                        .WithMany("Employees")
                        .HasForeignKey("ProfessionId")
                        .HasConstraintName("FK__employee__profes__7F2BE32F");

                    b.HasOne("Supermarket.Models.Entities.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("Supermarket.Models.Entities.Employee", "UserId")
                        .HasConstraintName("FK__employee__users___7D439ABD");

                    b.Navigation("Address");

                    b.Navigation("Branch");

                    b.Navigation("Department");

                    b.Navigation("Profession");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Job", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.User", "Employee")
                        .WithMany("Jobs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__jobs__employee_i__02084FDA");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.LogSession", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.User", "User")
                        .WithMany("LogSessions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__log_sessi__user___02FC7413");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Logistic", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Branch", "DestinationBranch")
                        .WithMany("LogisticDestinationBranches")
                        .HasForeignKey("DestinationBranchId")
                        .HasConstraintName("FK__logistics__desti__03F0984C");

                    b.HasOne("Supermarket.Models.Entities.Product", "Product")
                        .WithMany("Logistics")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__logistics__produ__05D8E0BE");

                    b.HasOne("Supermarket.Models.Entities.Branch", "StartingBranch")
                        .WithMany("LogisticStartingBranches")
                        .HasForeignKey("StartingBranchId")
                        .HasConstraintName("FK__logistics__start__04E4BC85");

                    b.Navigation("DestinationBranch");

                    b.Navigation("Product");

                    b.Navigation("StartingBranch");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.OpenPosition", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Proffesion", "Position")
                        .WithMany("OpenPositions")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK__open_posi__posit__06CD04F7");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Order", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Branch", "Branch")
                        .WithMany("Orders")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__order__branch_id__0B91BA14");

                    b.HasOne("Supermarket.Models.Entities.User", "Customer")
                        .WithMany("OrderCustomers")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__order__customer___07C12930");

                    b.HasOne("Supermarket.Models.Entities.User", "DeliveryMan")
                        .WithMany("OrderDeliveryMen")
                        .HasForeignKey("DeliveryManId")
                        .HasConstraintName("FK__order__delivery___0A9D95DB");

                    b.HasOne("Supermarket.Models.Entities.DeliveryStatus", "DeliveryStatus")
                        .WithMany("Orders")
                        .HasForeignKey("DeliveryStatusId")
                        .HasConstraintName("FK__order__delivery___08B54D69");

                    b.HasOne("Supermarket.Models.Entities.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .HasConstraintName("FK__order__order_sta__09A971A2");

                    b.Navigation("Branch");

                    b.Navigation("Customer");

                    b.Navigation("DeliveryMan");

                    b.Navigation("DeliveryStatus");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.OrderProduct", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__order_pro__order__0C85DE4D")
                        .IsRequired();

                    b.HasOne("Supermarket.Models.Entities.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__order_pro__produ__0D7A0286")
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Product", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__product__categor__0F624AF8");

                    b.HasOne("Supermarket.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK__product__supplie__0E6E26BF");

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.ProductPackage", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Branch", "Branch")
                        .WithMany("ProductPackages")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__product_p__branc__10566F31");

                    b.HasOne("Supermarket.Models.Entities.Product", "Prod")
                        .WithMany("ProductPackages")
                        .HasForeignKey("ProdId")
                        .HasConstraintName("FK__product_p__prod___114A936A");

                    b.Navigation("Branch");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Shipping", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Branch", "DestinationBranch")
                        .WithMany("Shippings")
                        .HasForeignKey("DestinationBranchId")
                        .HasConstraintName("FK__shipping__destin__1332DBDC");

                    b.HasOne("Supermarket.Models.Entities.Product", "Product")
                        .WithMany("Shippings")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__shipping__produc__123EB7A3");

                    b.HasOne("Supermarket.Models.Entities.Supplier", "Supplier")
                        .WithMany("Shippings")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK__shipping__suppli__14270015");

                    b.Navigation("DestinationBranch");

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.SpecialCare", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Product", "Product")
                        .WithOne("SpecialCare")
                        .HasForeignKey("Supermarket.Models.Entities.SpecialCare", "ProductId")
                        .HasConstraintName("FK__special_c__produ__151B244E")
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Supplier", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.AddressLocation", "Location")
                        .WithMany("Suppliers")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK__supplier__locati__160F4887");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.TransactionProduct", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Product", "Product")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__transacti__produ__17F790F9")
                        .IsRequired();

                    b.HasOne("Supermarket.Models.Entities.CashboxTransaction", "Transaction")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("TransactionId")
                        .HasConstraintName("FK__transacti__trans__17036CC0")
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.WarehouseJob", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Branch", "Branch")
                        .WithMany("WarehouseJobs")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Supermarket.Models.Entities.Job", "Jobs")
                        .WithOne("WarehouseJob")
                        .HasForeignKey("Supermarket.Models.Entities.WarehouseJob", "JobsId")
                        .HasConstraintName("FK__warehouse__jobs___18EBB532")
                        .IsRequired();

                    b.HasOne("Supermarket.Models.Entities.Logistic", "Logistics")
                        .WithMany("WarehouseJobs")
                        .HasForeignKey("LogisticsId")
                        .HasConstraintName("FK__warehouse__logis__1AD3FDA4");

                    b.HasOne("Supermarket.Models.Entities.Shipping", "Shipping")
                        .WithMany("WarehouseJobs")
                        .HasForeignKey("ShippingId")
                        .HasConstraintName("FK__warehouse__shipp__19DFD96B");

                    b.Navigation("Branch");

                    b.Navigation("Jobs");

                    b.Navigation("Logistics");

                    b.Navigation("Shipping");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.WarehouseToDepartmentJob", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.Job", "Jobs")
                        .WithOne("WarehouseToDepartmentJob")
                        .HasForeignKey("Supermarket.Models.Entities.WarehouseToDepartmentJob", "JobsId")
                        .HasConstraintName("FK__warehouse__jobs___1BC821DD")
                        .IsRequired();

                    b.HasOne("Supermarket.Models.Entities.Product", "Product")
                        .WithMany("WarehouseToDepartmentJobs")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__warehouse__produ__1CBC4616")
                        .IsRequired();

                    b.Navigation("Jobs");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.WishList", b =>
                {
                    b.HasOne("Supermarket.Models.Entities.User", "Customer")
                        .WithMany("WishLists")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__wish_list__custo__1EA48E88")
                        .IsRequired();

                    b.HasOne("Supermarket.Models.Entities.Product", "Product")
                        .WithMany("WishLists")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__wish_list__produ__1DB06A4F")
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.AddressLocation", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("Customers");

                    b.Navigation("Employees");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Branch", b =>
                {
                    b.Navigation("Cashboxes");

                    b.Navigation("CellProducts");

                    b.Navigation("DisposePackages");

                    b.Navigation("Employees");

                    b.Navigation("LogisticDestinationBranches");

                    b.Navigation("LogisticStartingBranches");

                    b.Navigation("Orders");

                    b.Navigation("ProductPackages");

                    b.Navigation("Shippings");

                    b.Navigation("WarehouseJobs");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Cashbox", b =>
                {
                    b.Navigation("CashboxTransactions");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.CashboxTransaction", b =>
                {
                    b.Navigation("TransactionProducts");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.DeliveryStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Department", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Employee", b =>
                {
                    b.Navigation("CashboxTransactions");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Job", b =>
                {
                    b.Navigation("CheckAndDisposeJob");

                    b.Navigation("WarehouseJob");

                    b.Navigation("WarehouseToDepartmentJob");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Logistic", b =>
                {
                    b.Navigation("WarehouseJobs");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Product", b =>
                {
                    b.Navigation("CellProducts");

                    b.Navigation("DisposePackages");

                    b.Navigation("Logistics");

                    b.Navigation("OrderProducts");

                    b.Navigation("ProductPackages");

                    b.Navigation("Shippings");

                    b.Navigation("SpecialCare");

                    b.Navigation("TransactionProducts");

                    b.Navigation("WarehouseToDepartmentJobs");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Proffesion", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("OpenPositions");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Shipping", b =>
                {
                    b.Navigation("WarehouseJobs");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Shippings");
                });

            modelBuilder.Entity("Supermarket.Models.Entities.User", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("Deliveryman");

                    b.Navigation("Employee");

                    b.Navigation("Jobs");

                    b.Navigation("LogSessions");

                    b.Navigation("OrderCustomers");

                    b.Navigation("OrderDeliveryMen");

                    b.Navigation("WishLists");
                });
#pragma warning restore 612, 618
        }
    }
}
